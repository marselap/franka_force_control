#!/usr/bin/env python
PACKAGE = "franka_force_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


# gen.add("desired_x", double_t, 0, " - ", 0.0,  -2.0, 2.0)
# gen.add("desired_y", double_t, 0, " - ", 0.0,  -2.0, 2.0)
# gen.add("desired_z", double_t, 0, " - ", 0.0,  0.0, 2.0)

# gen.add("desired_tx", double_t, 0, " - ", 0.0,  -2.0, 2.0)
# gen.add("desired_ty", double_t, 0, " - ", 0.0,  -2.0, 2.0)
# gen.add("desired_tz", double_t, 0, " - ", 0.0,  -2.0, 2.0)

gen.add("imp_f", double_t, 0, "impedance Fext", 0.0,  0.0, 20.0)
gen.add("imp_m", double_t, 0, "impedance m", 0.0,  0.0, 20.0)
gen.add("imp_d", double_t, 0, "impedance d", 0.0,  0.0, 50.0)
gen.add("imp_k", double_t, 0, "impedance k", 0.0,  0.0, 50.0)
gen.add("scale", double_t, 0, "impedance scale", 0.0,  0.0, 20.0)

gen.add("f_p_x", double_t, 0, "force P gain", 0.0,  0.0, 20.0)
gen.add("f_i_x", double_t, 0, "force I gain", 0.0,  0.0, 20.0)
gen.add("f_d_x", double_t, 0, "force D gain", 0.0,  0.0, 20.0)
gen.add("f_p_y", double_t, 0, "force P gain", 0.0,  0.0, 20.0)
gen.add("f_i_y", double_t, 0, "force I gain", 0.0,  0.0, 20.0)
gen.add("f_d_y", double_t, 0, "force D gain", 0.0,  0.0, 20.0)
gen.add("f_p_z", double_t, 0, "force P gain", 0.0,  0.0, 20.0)
gen.add("f_i_z", double_t, 0, "force I gain", 0.0,  0.0, 20.0)
gen.add("f_d_z", double_t, 0, "force D gain", 0.0,  0.0, 20.0)

gen.add("t_p_x", double_t, 0, "torque P gain", 0.0,  0.0, 20.0)
gen.add("t_i_x", double_t, 0, "torque I gain", 0.0,  0.0, 20.0)
gen.add("t_d_x", double_t, 0, "torque D gain", 0.0,  0.0, 20.0)
gen.add("t_p_y", double_t, 0, "torque P gain", 0.0,  0.0, 20.0)
gen.add("t_i_y", double_t, 0, "torque I gain", 0.0,  0.0, 20.0)
gen.add("t_d_y", double_t, 0, "torque D gain", 0.0,  0.0, 20.0)
gen.add("t_p_z", double_t, 0, "torque P gain", 0.0,  0.0, 20.0)
gen.add("t_i_z", double_t, 0, "torque I gain", 0.0,  0.0, 20.0)
gen.add("t_d_z", double_t, 0, "torque D gain", 0.0,  0.0, 20.0)

gen.add("limit", double_t, 0, "integrator limit", 5.0,  0.0, 20.0)


gen.add("k_p", double_t, 0, "force P gain", 0.0,  0.0, 2.0)
gen.add("k_i", double_t, 0, "force I gain", 0.0,  0.0, 2.0)


exit(gen.generate(PACKAGE, "dynamic_mass", "desired_mass_param"))
